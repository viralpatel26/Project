<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="emp-appraisal-api-test-suite.xml" />
	<munit:test name="emp-appraisal-api-test-success-test-case" doc:id="f7691434-a0cf-4f7c-bf4c-6df450d30e2e" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Database Appraisal Call" doc:id="9b74d5b8-ac85-4b6d-a457-485923bd96f8" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b19581c3-aeb4-4a65-98b5-407a9c676980" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://empappraisaltestresources/mock_success_payload.dwl')]" mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set EmpID URI Param Event" doc:id="601d3622-2c5c-48fd-a00b-081c315e214c" >
				<munit:attributes value="#[readUrl('classpath://empappraisaltestresources/set_event_success_attributes.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to emp-appraisal-api-flow" doc:id="c1ee9fc4-ada2-45be-917f-75f940a6d1a8" name="emp-appraisal-api-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert Appraisal Payload Response " doc:id="0eb99bdd-a35d-4e02-a1bf-796e650b7272" >
				<munit-tools:that ><![CDATA[#[import empappraisaltestresources::assert_expression_success_payload
---
assert_expression_success_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="emp-appraisal-api-not-found-test-case" doc:id="47c292fe-c45b-45f2-978c-41a9a5261aeb" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Database Appraisal Call" doc:id="81dc061e-adca-4122-b4ba-59fa635dd4d7" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b19581c3-aeb4-4a65-98b5-407a9c676980" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://empappraisaltestresources/mock_not_found_payload.dwl')]" mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set EmpID URI Param Event" doc:id="f75a9e0b-5b17-496a-9dc4-6059fd24cea5" >
				<munit:attributes value="#[readUrl('classpath://empappraisaltestresources/set_event_not_found_attributes.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to emp-appraisal-api-flow" doc:id="142141b3-169d-45a8-9ce8-c8ce75934f49" name="emp-appraisal-api-flow" />
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="a1945c05-bc0d-4c88-9eb2-95a67cc3e389" processor="db:select" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b19581c3-aeb4-4a65-98b5-407a9c676980" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:assert doc:name="Assert Appraisal Payload Response " doc:id="9472cea4-7622-4db5-b316-34f6d651bd0a" >
				<munit-tools:that ><![CDATA[#[import empappraisaltestresources::assert_expression_not_found_payload
---
assert_expression_not_found_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
